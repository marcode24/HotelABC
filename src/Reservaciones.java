
import controladores.HabitacionController;
import controladores.HorarioController;
import controladores.ReservacionController;
import java.time.LocalDate;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import modelos.Horario;


public class Reservaciones extends javax.swing.JInternalFrame {
    private Horario nuevoH;
    private int idReservacion = 0;
    private String nombre;
    private String estadoHabitacion;
    public Reservaciones() {
        initComponents();
        obtenerDatos(false, "");
        tableReservaciones.setRowHeight(30);
        tableReservaciones.getColumnModel().getColumn(2).setMaxWidth(0);
        tableReservaciones.getColumnModel().getColumn(2).setMinWidth(0);
        tableReservaciones.getTableHeader().getColumnModel().getColumn(2).setMaxWidth(0);
        tableReservaciones.getTableHeader().getColumnModel().getColumn(2).setMinWidth(0);
        btnConfirmar.setEnabled(false);
        
    }
    
    private void obtenerDatos(boolean esBuscar, String busqueda) {
        Limpiar(tableReservaciones);
        DefaultTableModel modelo = (DefaultTableModel) tableReservaciones.getModel();
        ReservacionController res = new ReservacionController();
        if(esBuscar) {
            btnConfirmar.setEnabled(false);
            res.buscarReservaciones(modelo, busqueda);
        } else {
            res.obtenerReservaciones(modelo);
        }
        // (esBuscar) ? res.buscarReservaciones(modelo, busqueda) : res.obtenerReservaciones(modelo);
    }
    
    private void Limpiar(JTable tabla){
        while(tabla.getRowCount() > 0){
            ((DefaultTableModel) tabla.getModel()).removeRow(0);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableReservaciones = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        txtBuscar = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnConfirmar = new javax.swing.JButton();

        setClosable(true);
        setTitle("Reservaciones");
        setMaximumSize(new java.awt.Dimension(1100, 600));
        setPreferredSize(new java.awt.Dimension(1100, 600));

        jPanel1.setMaximumSize(new java.awt.Dimension(1000, 600));
        jPanel1.setPreferredSize(new java.awt.Dimension(1000, 600));

        tableReservaciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "id", "Responsable", "idHabitacion", "Habitacion", "Entrada", "Salida", "Noches", "Total", "Estado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableReservaciones.setMaximumSize(new java.awt.Dimension(1100, 600));
        tableReservaciones.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableReservacionesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableReservaciones);
        if (tableReservaciones.getColumnModel().getColumnCount() > 0) {
            tableReservaciones.getColumnModel().getColumn(0).setResizable(false);
            tableReservaciones.getColumnModel().getColumn(2).setResizable(false);
            tableReservaciones.getColumnModel().getColumn(3).setResizable(false);
            tableReservaciones.getColumnModel().getColumn(4).setResizable(false);
            tableReservaciones.getColumnModel().getColumn(5).setResizable(false);
            tableReservaciones.getColumnModel().getColumn(6).setResizable(false);
            tableReservaciones.getColumnModel().getColumn(7).setResizable(false);
            tableReservaciones.getColumnModel().getColumn(8).setResizable(false);
        }

        jLabel8.setFont(new java.awt.Font("Ubuntu weight=255", 0, 36)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(254, 254, 254));
        jLabel8.setText("Reservaciones");

        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBuscarKeyTyped(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/search-alt-2-regular-36.png"))); // NOI18N
        jLabel1.setText("Buscar (nombre)");

        btnConfirmar.setFont(new java.awt.Font("Ubuntu weight=255", 0, 24)); // NOI18N
        btnConfirmar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/check-regular-36.png"))); // NOI18N
        btnConfirmar.setText("Confirmar");
        btnConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel8))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(jLabel1)
                                .addGap(3, 3, 3)
                                .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 476, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 9, Short.MAX_VALUE)))
                        .addGap(400, 400, 400))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel8)
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(64, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1089, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 546, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tableReservacionesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableReservacionesMouseClicked
        DefaultTableModel modelo = (DefaultTableModel) tableReservaciones.getModel();
        estadoHabitacion = modelo.getValueAt(tableReservaciones.getSelectedRow(), 8)+"";
        if(estadoHabitacion.equals("Pendiente")) {
            idReservacion = Integer.parseInt(modelo.getValueAt(tableReservaciones.getSelectedRow(), 0)+"");
            nombre = modelo.getValueAt(tableReservaciones.getSelectedRow(), 1)+"";
            nuevoH = new Horario();
            nuevoH.setEstado("Activo");
            nuevoH.setIdHabitacion(Integer.parseInt(modelo.getValueAt(tableReservaciones.getSelectedRow(), 2)+""));
            nuevoH.setNoches(Integer.parseInt(modelo.getValueAt(tableReservaciones.getSelectedRow(), 6)+""));
            nuevoH.setTotal(Double.parseDouble(modelo.getValueAt(tableReservaciones.getSelectedRow(), 7)+""));
            nuevoH.setLlegada(LocalDate.parse(modelo.getValueAt(tableReservaciones.getSelectedRow(), 4)+""));
            nuevoH.setSalida(LocalDate.parse(modelo.getValueAt(tableReservaciones.getSelectedRow(), 5)+""));
            btnConfirmar.setEnabled(true);  
        } else {
            btnConfirmar.setEnabled(false);  
        }
    }//GEN-LAST:event_tableReservacionesMouseClicked

    private void txtBuscarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyTyped
        // TODO add your handling code here:
        String busqueda = txtBuscar.getText().trim();
        if(!busqueda.equals("")) {
            obtenerDatos(true, busqueda);
        } else if (busqueda.length() == 0) {
            obtenerDatos(false, "");
        } else {
            return;
        }
    }//GEN-LAST:event_txtBuscarKeyTyped

    private void btnConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarActionPerformed
        if(estadoHabitacion.equals("Pendiente")) {
            // si: 0
            // no: 1
            String mensaje = "¿Ésta seguro que quiere confirmar esta reservacion \na nombre de: " + nombre + " ?" ;
            int respuesta = JOptionPane.showConfirmDialog(this, mensaje, "Confirmar Reservacion", JOptionPane.YES_NO_OPTION);
            if(respuesta == 0) {
                HorarioController horarioC = new HorarioController();
                ReservacionController reservacionC = new ReservacionController();
                HabitacionController habitacionC = new HabitacionController();
                if(horarioC.crearHorarioHabitacion(nuevoH) && reservacionC.cambiarEstadoReservacion("Confirmado", idReservacion) && habitacionC.cambiarDisponibilidad(nuevoH.getIdHabitacion())) {
                    JOptionPane.showMessageDialog(null, "Disfrute su estancia", "Success", JOptionPane.INFORMATION_MESSAGE);
                    obtenerDatos(false, "");
                } else {
                    JOptionPane.showMessageDialog(null, "Ocurrio un error intentelo de nuevo", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_btnConfirmarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConfirmar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableReservaciones;
    private javax.swing.JTextField txtBuscar;
    // End of variables declaration//GEN-END:variables
}
